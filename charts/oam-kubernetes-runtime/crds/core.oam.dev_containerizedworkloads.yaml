
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: containerizedworkloads.core.oam.dev
spec:
  group: core.oam.dev
  names:
    categories:
    - crossplane
    - oam
    kind: ContainerizedWorkload
    listKind: ContainerizedWorkloadList
    plural: containerizedworkloads
    singular: containerizedworkload
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: A ContainerizedWorkload is a workload that runs OCI containers.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ContainerizedWorkloadSpec defines the desired state of a ContainerizedWorkload.
            properties:
              arch:
                description: CPUArchitecture required by this workload.
                enum:
                - i386
                - amd64
                - arm
                - arm64
                type: string
              containers:
                description: Containers of which this workload consists.
                items:
                  description: A Container represents an Open Containers Initiative (OCI) container.
                  properties:
                    args:
                      description: Arguments to be passed to the command run by this container.
                      items:
                        type: string
                      type: array
                    command:
                      description: Command to be run by this container.
                      items:
                        type: string
                      type: array
                    config:
                      description: ConfigFiles that should be written within this container.
                      items:
                        description: A ContainerConfigFile specifies a configuration file that should be written within a container.
                        properties:
                          fromSecret:
                            description: FromSecret is a secret key reference which can be used to assign a value to be written to the configuration file at the given path in the container.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: The name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          path:
                            description: Path within the container at which the configuration file should be written.
                            type: string
                          subPath:
                            description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                            type: boolean
                          value:
                            description: Value that should be written to the configuration file.
                            type: string
                        required:
                        - path
                        - value
                        type: object
                      type: array
                    env:
                      description: Environment variables that should be set within this container.
                      items:
                        description: A ContainerEnvVar specifies an environment variable that should be set within a container.
                        properties:
                          fromSecret:
                            description: FromSecret is a secret key reference which can be used to assign a value to the environment variable.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: The name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          name:
                            description: Name of the environment variable. Must be composed of valid Unicode letter and number characters, as well as _ and -.
                            pattern: ^[-_a-zA-Z0-9]+$
                            type: string
                          value:
                            description: Value of the environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    image:
                      description: Image this container should run. Must be a path-like or URI-like representation of an OCI image. May be prefixed with a registry address and should be suffixed with a tag.
                      type: string
                    imagePullSecret:
                      description: ImagePullSecret specifies the name of a Secret from which the credentials required to pull this container's image can be loaded.
                      type: string
                    livenessProbe:
                      description: A LivenessProbe assesses whether this container is alive. Containers that fail liveness probes will be restarted.
                      properties:
                        exec:
                          description: One and only one of the following should be specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    name:
                      description: Name of this container. Must be unique within its workload.
                      type: string
                    ports:
                      description: Ports exposed by this container.
                      items:
                        description: A ContainerPort specifies a port that is exposed by a container.
                        properties:
                          containerPort:
                            description: Port number. Must be unique within its container.
                            format: int32
                            type: integer
                          hostPort:
                            description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                            format: int32
                            type: integer
                          name:
                            type: string
                          nodePort:
                            description: 'The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                            format: int32
                            type: integer
                          protocol:
                            description: once we're generating v1 CRDs. Protocol used by the server listening on this port.
                            enum:
                              - TCP
                              - UDP
                              - SCTP
                            type: string
                        required:
                        - containerPort
                        - name
                        type: object
                      type: array
                    readinessProbe:
                      description: A ReadinessProbe assesses whether this container is ready to serve requests. Containers that fail readiness probes will be withdrawn from service.
                      properties:
                        exec:
                          description: One and only one of the following should be specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    resources:
                      description: Resources required by this container
                      properties:
                        cpu:
                          description: CPU required by this container.
                          properties:
                            limits:
                              type: string
                            required:
                              description: Required CPU count. 1.0 represents one CPU core.
                              type: string
                          required:
                          - required
                          type: object
                        extended:
                          description: Extended resources required by this container.
                          items:
                            description: ExtendedResource required by a container.
                            properties:
                              name:
                                description: Name of the external resource. Resource names are specified in kind.group/version format, e.g. motionsensor.ext.example.com/v1.
                                type: string
                              required:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Required extended resource(s), e.g. 8 or "very-cool-widget"
                                x-kubernetes-int-or-string: true
                            required:
                            - name
                            - required
                            type: object
                          type: array
                        gpu:
                          description: GPU required by this container.
                          properties:
                            required:
                              description: Required GPU count.
                              type: string
                          required:
                          - required
                          type: object
                        memory:
                          description: Memory required by this container.
                          properties:
                            limits:
                              type: string
                            required:
                              description: Required memory.
                              type: string
                          required:
                          - required
                          type: object
                        volumes:
                          description: Volumes required by this container.
                          items:
                            description: VolumeResource required by a container.
                            properties:
                              accessMode:
                                description: AccessMode of this volume; RO (read only) or RW (read and write).
                                enum:
                                - RO
                                - RW
                                type: string
                              disk:
                                description: Disk requirements of this volume.
                                properties:
                                  ephemeral:
                                    description: Ephemeral specifies whether an external disk needs to be mounted.
                                    type: boolean
                                  required:
                                    description: Required disk space.
                                    type: string
                                required:
                                - required
                                type: object
                              mountPath:
                                description: MountPath at which this volume will be mounted within its container.
                                type: string
                              name:
                                description: Name of this volume. Must be unique within its container.
                                type: string
                              sharingPolicy:
                                description: SharingPolicy of this volume; Exclusive or Shared.
                                enum:
                                - Exclusive
                                - Shared
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                      required:
                      - cpu
                      - memory
                      type: object
                  required:
                  - image
                  - name
                  type: object
                type: array
              dependency:
                description: Dependency components
                items:
                  properties:
                    kind:
                      description: Kind of the referenced object.
                      enum:
                      - HelmRelease
                      - ContainerizedWorkload
                      - Third
                      type: string
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
              forceUpdateTimestamp:
                description: ForceUpdateTimestamp
                type: string
              initContainers:
                description: InitContainers of which this workload initContainers.
                items:
                  description: A Container represents an Open Containers Initiative (OCI) container.
                  properties:
                    args:
                      description: Arguments to be passed to the command run by this container.
                      items:
                        type: string
                      type: array
                    command:
                      description: Command to be run by this container.
                      items:
                        type: string
                      type: array
                    config:
                      description: ConfigFiles that should be written within this container.
                      items:
                        description: A ContainerConfigFile specifies a configuration file that should be written within a container.
                        properties:
                          fromSecret:
                            description: FromSecret is a secret key reference which can be used to assign a value to be written to the configuration file at the given path in the container.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: The name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          path:
                            description: Path within the container at which the configuration file should be written.
                            type: string
                          subPath:
                            description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                            type: boolean
                          value:
                            description: Value that should be written to the configuration file.
                            type: string
                        required:
                        - path
                        - value
                        type: object
                      type: array
                    env:
                      description: Environment variables that should be set within this container.
                      items:
                        description: A ContainerEnvVar specifies an environment variable that should be set within a container.
                        properties:
                          fromSecret:
                            description: FromSecret is a secret key reference which can be used to assign a value to the environment variable.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: The name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          name:
                            description: Name of the environment variable. Must be composed of valid Unicode letter and number characters, as well as _ and -.
                            pattern: ^[-_a-zA-Z0-9]+$
                            type: string
                          value:
                            description: Value of the environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    image:
                      description: Image this container should run. Must be a path-like or URI-like representation of an OCI image. May be prefixed with a registry address and should be suffixed with a tag.
                      type: string
                    imagePullSecret:
                      description: ImagePullSecret specifies the name of a Secret from which the credentials required to pull this container's image can be loaded.
                      type: string
                    livenessProbe:
                      description: A LivenessProbe assesses whether this container is alive. Containers that fail liveness probes will be restarted.
                      properties:
                        exec:
                          description: One and only one of the following should be specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    name:
                      description: Name of this container. Must be unique within its workload.
                      type: string
                    ports:
                      description: Ports exposed by this container.
                      items:
                        description: A ContainerPort specifies a port that is exposed by a container.
                        properties:
                          containerPort:
                            description: Port number. Must be unique within its container.
                            format: int32
                            type: integer
                          hostPort:
                            description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                            format: int32
                            type: integer
                          name:
                            type: string
                          nodePort:
                            description: 'The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                            format: int32
                            type: integer
                          protocol:
                            description: once we're generating v1 CRDs. Protocol used by the server listening on this port.
                            enum:
                              - TCP
                              - UDP
                              - SCTP
                            type: string
                        required:
                        - containerPort
                        - name
                        type: object
                      type: array
                    readinessProbe:
                      description: A ReadinessProbe assesses whether this container is ready to serve requests. Containers that fail readiness probes will be withdrawn from service.
                      properties:
                        exec:
                          description: One and only one of the following should be specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host. Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    resources:
                      description: Resources required by this container
                      properties:
                        cpu:
                          description: CPU required by this container.
                          properties:
                            limits:
                              type: string
                            required:
                              description: Required CPU count. 1.0 represents one CPU core.
                              type: string
                          required:
                          - required
                          type: object
                        extended:
                          description: Extended resources required by this container.
                          items:
                            description: ExtendedResource required by a container.
                            properties:
                              name:
                                description: Name of the external resource. Resource names are specified in kind.group/version format, e.g. motionsensor.ext.example.com/v1.
                                type: string
                              required:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Required extended resource(s), e.g. 8 or "very-cool-widget"
                                x-kubernetes-int-or-string: true
                            required:
                            - name
                            - required
                            type: object
                          type: array
                        gpu:
                          description: GPU required by this container.
                          properties:
                            required:
                              description: Required GPU count.
                              type: string
                          required:
                          - required
                          type: object
                        memory:
                          description: Memory required by this container.
                          properties:
                            limits:
                              type: string
                            required:
                              description: Required memory.
                              type: string
                          required:
                          - required
                          type: object
                        volumes:
                          description: Volumes required by this container.
                          items:
                            description: VolumeResource required by a container.
                            properties:
                              accessMode:
                                description: AccessMode of this volume; RO (read only) or RW (read and write).
                                enum:
                                - RO
                                - RW
                                type: string
                              disk:
                                description: Disk requirements of this volume.
                                properties:
                                  ephemeral:
                                    description: Ephemeral specifies whether an external disk needs to be mounted.
                                    type: boolean
                                  required:
                                    description: Required disk space.
                                    type: string
                                required:
                                - required
                                type: object
                              mountPath:
                                description: MountPath at which this volume will be mounted within its container.
                                type: string
                              name:
                                description: Name of this volume. Must be unique within its container.
                                type: string
                              sharingPolicy:
                                description: SharingPolicy of this volume; Exclusive or Shared.
                                enum:
                                - Exclusive
                                - Shared
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                      required:
                      - cpu
                      - memory
                      type: object
                  required:
                  - image
                  - name
                  type: object
                type: array
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector required by this workload.
                type: object
              osType:
                description: OperatingSystem required by this workload.
                enum:
                - linux
                - windows
                type: string
              pointToGrayName:
                description: old grey workload name need modify match selector
                type: string
              serviceMesh:
                description: check add istio label
                type: boolean
              serviceType:
                description: 'ServiceType determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/'
                type: string
              type:
                description: Type support deployment and statefulSet
                type: string
            required:
            - containers
            type: object
          status:
            description: A ContainerizedWorkloadStatus represents the observed state of a ContainerizedWorkload.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              resources:
                description: Resources managed by this containerised workload.
                items:
                  description: A TypedReference refers to an object by Name, Kind, and APIVersion. It is commonly used to reference cluster-scoped objects or objects where the namespace is already known.
                  properties:
                    apiVersion:
                      description: APIVersion of the referenced object.
                      type: string
                    kind:
                      description: Kind of the referenced object.
                      type: string
                    name:
                      description: Name of the referenced object.
                      type: string
                    uid:
                      description: UID of the referenced object.
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
