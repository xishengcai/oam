
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: horizontalpodautoscalertraits.core.oam.dev
spec:
  group: core.oam.dev
  names:
    categories:
    - crossplane
    - oam
    kind: HorizontalPodAutoscalerTrait
    listKind: HorizontalPodAutoscalerTraitList
    plural: horizontalpodautoscalertraits
    singular: horizontalpodautoscalertrait
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: HorizontalPodAutoscalerTrait is the Schema for the horizontalpodautoscalertraits
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HorizontalPodAutoscalerTraitSpec defines the desired state
              of HorizontalPodAutoscalerTrait
            properties:
              maxReplicas:
                description: upper limit for the number of pods that can be set by
                  the autoscaler; cannot be smaller than MinReplicas.
                format: int32
                type: integer
              metrics:
                description: metrics contains the specifications for which to use
                  to calculate the desired replica count (the maximum replica count
                  across all metrics will be used).  The desired replica count is
                  calculated multiplying the ratio between the target value and the
                  current value by the current number of pods.  Ergo, metrics used
                  must decrease as the pod count is increased, and vice-versa.  See
                  the individual metric source types for more information about how
                  each type of metric must respond.
                items:
                  description: MetricSpec specifies how to scale based on a single
                    metric (only `type` and one other matching field should be set
                    at once).
                  properties:
                    external:
                      description: external refers to a global metric that is not
                        associated with any Kubernetes object. It allows autoscaling
                        based on information coming from components running outside
                        of cluster (for example length of queue in cloud messaging
                        service, or QPS from loadbalancer running outside of cluster).
                      properties:
                        metricName:
                          description: metricName is the name of the metric in question.
                          type: string
                        metricSelector:
                          description: metricSelector is used to identify a specific
                            time series within a given metric.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        targetAverageValue:
                          description: targetAverageValue is the target per-pod value
                            of global metric (as a quantity). Mutually exclusive with
                            TargetValue.
                          type: string
                        targetValue:
                          description: targetValue is the target value of the metric
                            (as a quantity). Mutually exclusive with TargetAverageValue.
                          type: string
                      required:
                      - metricName
                      type: object
                    object:
                      description: object refers to a metric describing a single kubernetes
                        object (for example, hits-per-second on an Ingress object).
                      properties:
                        averageValue:
                          description: averageValue is the target value of the average
                            of the metric across all relevant pods (as a quantity)
                          type: string
                        metricName:
                          description: metricName is the name of the metric in question.
                          type: string
                        selector:
                          description: selector is the string-encoded form of a standard
                            kubernetes label selector for the given metric When set,
                            it is passed as an additional parameter to the metrics
                            server for more specific metrics scoping When unset, just
                            the metricName will be used to gather metrics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        target:
                          description: target is the described Kubernetes object.
                          properties:
                            apiVersion:
                              description: API version of the referent
                              type: string
                            kind:
                              description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                              type: string
                            name:
                              description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        targetValue:
                          description: targetValue is the target value of the metric
                            (as a quantity).
                          type: string
                      required:
                      - metricName
                      - target
                      - targetValue
                      type: object
                    pods:
                      description: pods refers to a metric describing each pod in
                        the current scale target (for example, transactions-processed-per-second).  The
                        values will be averaged together before being compared to
                        the target value.
                      properties:
                        metricName:
                          description: metricName is the name of the metric in question
                          type: string
                        selector:
                          description: selector is the string-encoded form of a standard
                            kubernetes label selector for the given metric When set,
                            it is passed as an additional parameter to the metrics
                            server for more specific metrics scoping When unset, just
                            the metricName will be used to gather metrics.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        targetAverageValue:
                          description: targetAverageValue is the target value of the
                            average of the metric across all relevant pods (as a quantity)
                          type: string
                      required:
                      - metricName
                      - targetAverageValue
                      type: object
                    resource:
                      description: resource refers to a resource metric (such as those
                        specified in requests and limits) known to Kubernetes describing
                        each pod in the current scale target (e.g. CPU or memory).
                        Such metrics are built in to Kubernetes, and have special
                        scaling options on top of those available to normal per-pod
                        metrics using the "pods" source.
                      properties:
                        name:
                          description: name is the name of the resource in question.
                          type: string
                        targetAverageUtilization:
                          description: targetAverageUtilization is the target value
                            of the average of the resource metric across all relevant
                            pods, represented as a percentage of the requested value
                            of the resource for the pods.
                          format: int32
                          type: integer
                        targetAverageValue:
                          description: targetAverageValue is the target value of the
                            average of the resource metric across all relevant pods,
                            as a raw value (instead of as a percentage of the request),
                            similar to the "pods" metric source type.
                          type: string
                      required:
                      - name
                      type: object
                    type:
                      description: type is the type of metric source.  It should be
                        one of "Object", "Pods" or "Resource", each mapping to a matching
                        field in the object.
                      type: string
                  required:
                  - type
                  type: object
                type: array
              minReplicas:
                description: minReplicas is the lower limit for the number of replicas
                  to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas
                  is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled
                  and at least one Object or External metric is configured.  Scaling
                  is active as long as at least one metric value is available.
                format: int32
                type: integer
              workloadRef:
                description: WorkloadReference to the workload this trait applies
                  to.
                properties:
                  apiVersion:
                    description: APIVersion of the referenced object.
                    type: string
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                  uid:
                    description: UID of the referenced object.
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
            required:
            - maxReplicas
            type: object
          status:
            description: HorizontalPodAutoscalerTraitStatus defines the observed state
              of HorizontalPodAutoscalerTrait
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              resources:
                description: Resources managed by this service trait
                items:
                  description: A TypedReference refers to an object by Name, Kind,
                    and APIVersion. It is commonly used to reference cluster-scoped
                    objects or objects where the namespace is already known.
                  properties:
                    apiVersion:
                      description: APIVersion of the referenced object.
                      type: string
                    kind:
                      description: Kind of the referenced object.
                      type: string
                    name:
                      description: Name of the referenced object.
                      type: string
                    uid:
                      description: UID of the referenced object.
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
